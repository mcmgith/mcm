{"ast":null,"code":"import profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: \"Whatcha gonna do?\",\n        likesCount: 3\n      }, {\n        id: 2,\n        message: \"When shall we go?\",\n        likesCount: 1\n      }],\n      newPostText: 'Social'\n    },\n    dialogsPage: {\n      dialogs: [{\n        id: 1,\n        name: \"Sveta\"\n      }, {\n        id: 2,\n        name: \"Dasha\"\n      }],\n      messages: [{\n        id: 1,\n        message: \"Hi\"\n      }, {\n        id: 2,\n        message: \"What are you doing?\"\n      }],\n      newMessageBody: ''\n    },\n    sidebar: {}\n  },\n\n  _callSubscriber() {\n    console.log('State is change');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    this._state.profilePage = profileReducer(this._state.profilePage, action);\n    this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action);\n    this._state.sidebar = sidebarReducer(this._state.sidebar, action);\n\n    this._callSubscriber(this._state);\n  }\n\n};\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const updateNewPostTextActionCreator = text => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport const sendMessageCreator = () => {\n  return {\n    type: SEND_MESSAGE\n  };\n};\nexport const updateNewMessageBodyCreator = body => {\n  return {\n    type: UPDATE_NEW_MESSAGE_BODY,\n    body: body\n  };\n};\nwindow.store = store;\nexport default store;","map":{"version":3,"sources":["E:/Social/socials/src/redux/state.js"],"names":["profileReducer","dialogsReducer","sidebarReducer","store","_state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","dialogs","name","messages","newMessageBody","sidebar","_callSubscriber","console","log","getState","subscribe","observer","dispatch","action","addPostActionCreator","type","ADD_POST","updateNewPostTextActionCreator","text","UPDATE_NEW_POST_TEXT","newText","sendMessageCreator","SEND_MESSAGE","updateNewMessageBodyCreator","body","UPDATE_NEW_MESSAGE_BODY","window"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,mBAA3B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,IAAIC,KAAK,GAAG;AACRC,EAAAA,MAAM,EAAE;AACAC,IAAAA,WAAW,EAAC;AACRC,MAAAA,KAAK,EAAE,CACH;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE,mBAAlB;AAAuCC,QAAAA,UAAU,EAAE;AAAnD,OADG,EAEH;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE,mBAAlB;AAAuCC,QAAAA,UAAU,EAAE;AAAnD,OAFG,CADC;AAKRC,MAAAA,WAAW,EAAE;AALL,KADZ;AASAC,IAAAA,WAAW,EAAC;AACRC,MAAAA,OAAO,EAAE,CACL;AAACL,QAAAA,EAAE,EAAE,CAAL;AAAOM,QAAAA,IAAI,EAAE;AAAb,OADK,EAEL;AAACN,QAAAA,EAAE,EAAE,CAAL;AAAOM,QAAAA,IAAI,EAAE;AAAb,OAFK,CADD;AAKRC,MAAAA,QAAQ,EAAE,CACN;AAACP,QAAAA,EAAE,EAAE,CAAL;AAAOC,QAAAA,OAAO,EAAE;AAAhB,OADM,EAEN;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAOC,QAAAA,OAAO,EAAE;AAAhB,OAFM,CALF;AASRO,MAAAA,cAAc,EAAE;AATR,KATZ;AAoBAC,IAAAA,OAAO,EAAC;AApBR,GADA;;AAuBRC,EAAAA,eAAe,GAAG;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,GAzBO;;AA2BRC,EAAAA,QAAQ,GAAE;AACN,WAAO,KAAKhB,MAAZ;AACH,GA7BO;;AA8BRiB,EAAAA,SAAS,CAACC,QAAD,EAAW;AAChB,SAAKL,eAAL,GAAuBK,QAAvB;AACH,GAhCO;;AAkCRC,EAAAA,QAAQ,CAACC,MAAD,EAAQ;AAEZ,SAAKpB,MAAL,CAAYC,WAAZ,GAA0BL,cAAc,CAAC,KAAKI,MAAL,CAAYC,WAAb,EAA0BmB,MAA1B,CAAxC;AACA,SAAKpB,MAAL,CAAYO,WAAZ,GAA0BV,cAAc,CAAC,KAAKG,MAAL,CAAYO,WAAb,EAA0Ba,MAA1B,CAAxC;AACA,SAAKpB,MAAL,CAAYY,OAAZ,GAAsBd,cAAc,CAAC,KAAKE,MAAL,CAAYY,OAAb,EAAsBQ,MAAtB,CAApC;;AAEA,SAAKP,eAAL,CAAqB,KAAKb,MAA1B;AACH;;AAzCO,CAAZ;AA4CA,OAAO,MAAMqB,oBAAoB,GAAG,MAAM;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAEC;AADH,GAAP;AAGH,CAJM;AAKP,OAAO,MAAMC,8BAA8B,GAAIC,IAAD,IAAU;AACpD,SAAO;AACHH,IAAAA,IAAI,EAAEI,oBADH;AACyBC,IAAAA,OAAO,EAAEF;AADlC,GAAP;AAGH,CAJM;AAKP,OAAO,MAAMG,kBAAkB,GAAG,MAAM;AACpC,SAAO;AACHN,IAAAA,IAAI,EAAEO;AADH,GAAP;AAGH,CAJM;AAKP,OAAO,MAAMC,2BAA2B,GAAIC,IAAD,IAAU;AACjD,SAAO;AACHT,IAAAA,IAAI,EAAEU,uBADH;AAC4BD,IAAAA,IAAI,EAAEA;AADlC,GAAP;AAGH,CAJM;AAMPE,MAAM,CAAClC,KAAP,GAAeA,KAAf;AAEA,eAAeA,KAAf","sourcesContent":["import profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\n\r\nlet store = {\r\n    _state: { \r\n            profilePage:{  \r\n                posts: [ \r\n                    { id: 1, message: \"Whatcha gonna do?\", likesCount: 3 }, \r\n                    { id: 2, message: \"When shall we go?\", likesCount: 1 } \r\n                ],\r\n                newPostText: 'Social'\r\n                \r\n            },\r\n            dialogsPage:{ \r\n                dialogs: [\r\n                    {id: 1,name: \"Sveta\" }, \r\n                    {id: 2,name: \"Dasha\"} \r\n                ],\r\n                messages: [ \r\n                    {id: 1,message: \"Hi\"}, \r\n                    {id: 2,message: \"What are you doing?\"} \r\n                ],\r\n                newMessageBody: ''\r\n            },\r\n            sidebar:{}\r\n            },\r\n    _callSubscriber() {\r\n        console.log('State is change');\r\n    },\r\n\r\n    getState(){\r\n        return this._state;\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer;\r\n    },\r\n\r\n    dispatch(action){\r\n\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action);\r\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action);\r\n        this._state.sidebar = sidebarReducer(this._state.sidebar, action);\r\n        \r\n        this._callSubscriber(this._state);\r\n    }   \r\n}\r\n\r\nexport const addPostActionCreator = () => {\r\n    return {\r\n        type: ADD_POST\r\n    }\r\n}\r\nexport const updateNewPostTextActionCreator = (text) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT, newText: text\r\n    }\r\n}\r\nexport const sendMessageCreator = () => {\r\n    return {\r\n        type: SEND_MESSAGE\r\n    }\r\n}\r\nexport const updateNewMessageBodyCreator = (body) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_BODY, body: body\r\n    }\r\n}\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n\r\n"]},"metadata":{},"sourceType":"module"}