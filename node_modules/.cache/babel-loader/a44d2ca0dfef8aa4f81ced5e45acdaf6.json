{"ast":null,"code":"var _jsxFileName = \"e:\\\\Social\\\\socials\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { followAC, setUsersAC, unfollowAC, setCurrentPageAC, setUsersTotalCountAC } from '../../redux/users-reducer';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport preloader from './../../assets/images';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page=\".concat(pageNumber, \"&count=\").concat(this.props.pageSize)).then(response => {\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page=\".concat(this.props.currentPage, \"&count=\").concat(this.props.pageSize)).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(\"img\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      unfollow: this.props.unfollow,\n      follow: this.props.follow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setUsersTotalCountAC(totalCount));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["e:/Social/socials/src/components/Users/UsersContainer.jsx"],"names":["React","connect","followAC","setUsersAC","unfollowAC","setCurrentPageAC","setUsersTotalCountAC","axios","Users","preloader","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","get","pageSize","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalUsersCount","totalCount","render","isFetching","totalUsersCount","users","unfollow","follow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { followAC, setUsersAC, unfollowAC, setCurrentPageAC, setUsersTotalCountAC} from '../../redux/users-reducer';\r\nimport * as axios from 'axios';\r\nimport Users from './Users';\r\nimport preloader from './../../assets/images'\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setUsers(response.data.items);\r\n            this.props.setTotalUsersCount(response.data.totalCount);\r\n        });\r\n    }\r\n\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setUsers(response.data.items);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <img /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    unfollow={this.props.unfollow}\r\n                    follow={this.props.follow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage:(pageNumber) =>{\r\n            dispatch(setCurrentPageAC(pageNumber));\r\n        },\r\n        setTotalUsersCount:(totalCount) =>{\r\n            dispatch(setUsersTotalCountAC(totalCount));\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);\r\n"]},"metadata":{},"sourceType":"module"}