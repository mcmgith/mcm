{"ast":null,"code":"var _jsxFileName = \"e:\\\\Social\\\\socials\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, setUsers, unfollow, setCurrentPage, setTotalUsersCount, toggleIsFetching } from '../../redux/users-reducer';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport Preloader from '../common/Preloader/preloader';\nimport { getUsers } from '../../Api/Api';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.toggleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      getUsers(pageNumber, this.props.pageSize).then(data => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(data.items);\n      this.props.setTotalUsersCount(data.totalCount);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      unfollow: this.props.unfollow,\n      follow: this.props.follow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching\n})(UsersContainer);","map":{"version":3,"sources":["e:/Social/socials/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","setUsers","unfollow","setCurrentPage","setTotalUsersCount","toggleIsFetching","axios","Users","Preloader","getUsers","UsersContainer","Component","onPageChanged","pageNumber","props","pageSize","then","data","items","componentDidMount","currentPage","totalCount","render","isFetching","totalUsersCount","users","mapStateToProps","state","usersPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,EAAqCC,cAArC,EAAqDC,kBAArD,EAAyEC,gBAAzE,QAAgG,2BAAhG;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,QAAT,QAAyB,eAAzB;;AAIA,MAAMC,cAAN,SAA6BZ,KAAK,CAACa,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAazCC,aAbyC,GAaxBC,UAAD,IAAgB;AAC5B,WAAKC,KAAL,CAAWT,gBAAX,CAA4B,IAA5B;AACA,WAAKS,KAAL,CAAWX,cAAX,CAA0BU,UAA1B;AACAJ,MAAAA,QAAQ,CAACI,UAAD,EAAa,KAAKC,KAAL,CAAWC,QAAxB,CAAR,CAA0CC,IAA1C,CAA+CC,IAAI,IAAI;AACnD,aAAKH,KAAL,CAAWT,gBAAX,CAA4B,KAA5B;AACA,aAAKS,KAAL,CAAWb,QAAX,CAAoBgB,IAAI,CAACC,KAAzB;AACH,OAHD;AAIH,KApBwC;AAAA;;AAEzCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKL,KAAL,CAAWT,gBAAX,CAA4B,IAA5B;AAEAI,IAAAA,QAAQ,CAAC,KAAKK,KAAL,CAAWM,WAAZ,EAAyB,KAAKN,KAAL,CAAWC,QAApC,CAAR,CAAsDC,IAAtD,CAA2DC,IAAI,IAAI;AAC/D,WAAKH,KAAL,CAAWT,gBAAX,CAA4B,KAA5B;AACA,WAAKS,KAAL,CAAWb,QAAX,CAAoBgB,IAAI,CAACC,KAAzB;AACA,WAAKJ,KAAL,CAAWV,kBAAX,CAA8Ba,IAAI,CAACI,UAAnC;AACH,KAJD;AAKH;;AAYDC,EAAAA,MAAM,GAAG;AACL,WAAO,0CACF,KAAKR,KAAL,CAAWS,UAAX,GAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAwC,IADtC,EAEH,oBAAC,KAAD;AAAO,MAAA,eAAe,EAAE,KAAKT,KAAL,CAAWU,eAAnC;AACQ,MAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWC,QAD7B;AAEQ,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWM,WAFhC;AAGQ,MAAA,aAAa,EAAE,KAAKR,aAH5B;AAIQ,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWW,KAJ1B;AAKQ,MAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWZ,QAL7B;AAMQ,MAAA,MAAM,EAAE,KAAKY,KAAL,CAAWd,MAN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAWH;;AAlCwC;;AAqC7C,IAAI0B,eAAe,GAAIC,KAAD,IAAU;AAC5B,SAAM;AACFF,IAAAA,KAAK,EAAEE,KAAK,CAACC,SAAN,CAAgBH,KADrB;AAEFV,IAAAA,QAAQ,EAAEY,KAAK,CAACC,SAAN,CAAgBb,QAFxB;AAGFS,IAAAA,eAAe,EAAEG,KAAK,CAACC,SAAN,CAAgBJ,eAH/B;AAIFJ,IAAAA,WAAW,EAAEO,KAAK,CAACC,SAAN,CAAgBR,WAJ3B;AAKFG,IAAAA,UAAU,EAAEI,KAAK,CAACC,SAAN,CAAgBL;AAL1B,GAAN;AAOH,CARD;;AAUA,eAAexB,OAAO,CAAC2B,eAAD,EAAkB;AAChC1B,EAAAA,MADgC;AAEhCE,EAAAA,QAFgC;AAGhCD,EAAAA,QAHgC;AAIhCE,EAAAA,cAJgC;AAKhCC,EAAAA,kBALgC;AAMhCC,EAAAA;AANgC,CAAlB,CAAP,CAOZK,cAPY,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { follow, setUsers, unfollow, setCurrentPage, setTotalUsersCount, toggleIsFetching} from '../../redux/users-reducer';\r\nimport * as axios from 'axios';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/preloader';\r\nimport { getUsers } from '../../Api/Api';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n\r\n        getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n            this.props.toggleIsFetching(false);\r\n            this.props.setUsers(data.items);\r\n            this.props.setTotalUsersCount(data.totalCount);\r\n        });\r\n    }\r\n\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.toggleIsFetching(true);\r\n        this.props.setCurrentPage(pageNumber);\r\n        getUsers(pageNumber, this.props.pageSize).then(data => {\r\n            this.props.toggleIsFetching(false);\r\n            this.props.setUsers(data.items);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    unfollow={this.props.unfollow}\r\n                    follow={this.props.follow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setUsers,\r\n        setCurrentPage,\r\n        setTotalUsersCount,\r\n        toggleIsFetching,\r\n})(UsersContainer);\r\n"]},"metadata":{},"sourceType":"module"}