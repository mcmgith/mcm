{"ast":null,"code":"import _classCallCheck from\"e:\\\\Shty\\\\Xr\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"e:\\\\Shty\\\\Xr\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"e:\\\\Shty\\\\Xr\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"e:\\\\Shty\\\\Xr\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"e:\\\\Shty\\\\Xr\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import Profile from'./Profile';import{connect}from'react-redux';import{getUserProfile,getStatus,updateStatus}from'../../redux/profile-reducer';import{withRouter}from'react-router-dom';import{compose}from'redux';var ProfileContainer=/*#__PURE__*/function(_React$Component){_inherits(ProfileContainer,_React$Component);function ProfileContainer(){_classCallCheck(this,ProfileContainer);return _possibleConstructorReturn(this,_getPrototypeOf(ProfileContainer).apply(this,arguments));}_createClass(ProfileContainer,[{key:\"componentDidMount\",value:function componentDidMount(){var userId=this.props.match.params.userId;if(!userId){userId=this.props.authorizedUserId;if(!userId){this.props.history.push('/login');}}this.props.getUserProfile(userId);this.props.getStatus(userId);}},{key:\"render\",value:function render(){return React.createElement(Profile,Object.assign({},this.props,{profile:this.props.profile,status:this.props.status,updateStatus:this.props.updateStatus}));}}]);return ProfileContainer;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{profile:state.profilePage.profile,status:state.profilePage.status,authorizedUserId:state.auth.userId,isAuth:state.auth.isAuth};};export default compose(connect(mapStateToProps,{getUserProfile:getUserProfile,getStatus:getStatus,updateStatus:updateStatus}),withRouter//withAuthRedirect   //Редиректит на логин\n)(ProfileContainer);","map":{"version":3,"sources":["e:/Shty/Xr/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","connect","getUserProfile","getStatus","updateStatus","withRouter","compose","ProfileContainer","userId","props","match","params","authorizedUserId","history","push","profile","status","Component","mapStateToProps","state","profilePage","auth","isAuth"],"mappings":"wfAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,cAAT,CAAyBC,SAAzB,CAAoCC,YAApC,KAAwD,6BAAxD,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,OAAT,KAAwB,OAAxB,C,GAEMC,CAAAA,gB,oVAEiB,CACf,GAAIC,CAAAA,MAAM,CAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC,CACA,GAAI,CAACA,MAAL,CAAY,CACRA,MAAM,CAAG,KAAKC,KAAL,CAAWG,gBAApB,CACA,GAAG,CAACJ,MAAJ,CAAW,CACP,KAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,EACH,CACJ,CACD,KAAKL,KAAL,CAAWP,cAAX,CAA0BM,MAA1B,EACA,KAAKC,KAAL,CAAWN,SAAX,CAAqBK,MAArB,EACH,C,uCAEO,CACJ,MACQ,qBAAC,OAAD,kBAAa,KAAKC,KAAlB,EACA,OAAO,CAAE,KAAKA,KAAL,CAAWM,OADpB,CAEA,MAAM,CAAE,KAAKN,KAAL,CAAWO,MAFnB,CAGA,YAAY,CAAE,KAAKP,KAAL,CAAWL,YAHzB,GADR,CAMH,C,8BArB0BL,KAAK,CAACkB,S,EAuBrC,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAC9BJ,OAAO,CAAEI,KAAK,CAACC,WAAN,CAAkBL,OADG,CAE9BC,MAAM,CAAEG,KAAK,CAACC,WAAN,CAAkBJ,MAFI,CAG9BJ,gBAAgB,CAAEO,KAAK,CAACE,IAAN,CAAWb,MAHC,CAI9Bc,MAAM,CAACH,KAAK,CAACE,IAAN,CAAWC,MAJY,CAAZ,EAAtB,CAQA,cAAehB,CAAAA,OAAO,CAClBL,OAAO,CAACiB,eAAD,CAAkB,CAAEhB,cAAc,CAAdA,cAAF,CAAkBC,SAAS,CAATA,SAAlB,CAA6BC,YAAY,CAAZA,YAA7B,CAAlB,CADW,CAElBC,UACA;AAHkB,CAAP,CAIbE,gBAJa,CAAf","sourcesContent":["import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount(){\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                <Profile {...this.props} \r\n                profile={this.props.profile} \r\n                status={this.props.status} \r\n                updateStatus={this.props.updateStatus}/>  \r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth:state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus} ),\r\n    withRouter,\r\n    //withAuthRedirect   //Редиректит на логин\r\n)(ProfileContainer)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}