{"ast":null,"code":"import _slicedToArray from \"e:\\\\Social\\\\socials\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"e:\\\\Social\\\\socials\\\\src\\\\components\\\\common\\\\Paginator\\\\Paginator.jsx\";\nimport React, { useState } from 'react';\nimport styles from \"./Paginator.module.css\";\nimport cn from 'classnames';\n\nlet Paginator = ({\n  totalItemsCount,\n  pageSize,\n  currentPage,\n  onPageChanged,\n  portionSize = 8\n}) => {\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n\n  let _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      portionNumber = _useState2[0],\n      setPortionNumber = _useState2[1];\n\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return React.createElement(\"div\", {\n    className: styles.paginator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, portionNumber > 1 && React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Prev\"), pages.filter(p => leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n    return React.createElement(\"span\", {\n      className: cn({\n        [styles.selectedPage]: currentPage === p\n      }, styles.pageNumber),\n      key: p,\n      onClick: e => {\n        onPageChanged(p);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, p);\n  }), portionCount > portionNumber && React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Next\"));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["e:/Social/socials/src/components/common/Paginator/Paginator.jsx"],"names":["React","useState","styles","cn","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","map","selectedPage","pageNumber","e"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,EAAP,MAAe,YAAf;;AAEA,IAAIC,SAAS,GAAG,CAAC;AAACC,EAAAA,eAAD;AAAkBC,EAAAA,QAAlB;AAA4BC,EAAAA,WAA5B;AAAyCC,EAAAA,aAAzC;AAAwDC,EAAAA,WAAW,GAAG;AAAtE,CAAD,KAA8E;AAC1F,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAjB;AAEA,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;;AAR0F,kBASlDR,QAAQ,CAAC,CAAD,CAT0C;AAAA;AAAA,MASrFgB,aATqF;AAAA,MAStEC,gBATsE;;AAU1F,MAAIC,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAtB,GAAoC,CAAhE;AACA,MAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAA7C;AAEA,SAAO;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACmB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFJ,aAAa,GAAG,CAAhB,IAAqB;AAAQ,IAAA,OAAO,EAAE,MAAM;AAACC,MAAAA,gBAAgB,CAAED,aAAa,GAAE,CAAjB,CAAhB;AAAoC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADnB,EAGFJ,KAAK,CACDS,MADJ,CACWC,CAAC,IAAIJ,qBAAqB,IAAII,CAAC,IAAIH,sBAD9C,EAEII,GAFJ,CAEQD,CAAC,IAAI;AACN,WAAO;AAAM,MAAA,SAAS,EACtBpB,EAAE,CACI;AAAC,SAACD,MAAM,CAACuB,YAAR,GAAuBlB,WAAW,KAAKgB;AAAxC,OADJ,EACgDrB,MAAM,CAACwB,UADvD,CADK;AAGP,MAAA,GAAG,EAAEH,CAHE;AAIH,MAAA,OAAO,EAAGI,CAAD,IAAO;AAAEnB,QAAAA,aAAa,CAACe,CAAD,CAAb;AAAkB,OAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIoCA,CAJpC,CAAP;AAKH,GARJ,CAHE,EAYEP,YAAY,GAAGC,aAAf,IAAgC;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZlC,CAAP;AAcH,CA3BD;;AA6BA,eAAeb,SAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from 'classnames';\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 8 }) =>{\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 && <button onClick={() => {setPortionNumber (portionNumber- 1)}}>Prev</button>}\r\n\r\n        {pages\r\n            .filter(p => leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map(p => {\r\n                return <span className={\r\n                cn\r\n                     ({[styles.selectedPage]: currentPage === p}, styles.pageNumber)}\r\n                key={p}\r\n                    onClick={(e) => { onPageChanged(p) }}>{p}</span>\r\n            })}\r\n            {portionCount > portionNumber && <button onClick={() => { setPortionNumber(portionNumber + 1) }}>Next</button>}\r\n    </div>\r\n}\r\n\r\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}