{"ast":null,"code":"var _jsxFileName = \"e:\\\\Social\\\\socials\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, setUsers, unfollow, setCurrentPage, setTotalUsersCount, toggleIsFetching } from '../../redux/users-reducer';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport Preloader from '../common/Preloader/preloader';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.toggleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page=\".concat(pageNumber, \"&count=\").concat(this.props.pageSize)).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page=\".concat(this.props.currentPage, \"&count=\").concat(this.props.pageSize), {\n      withCre\n    }).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      unfollow: this.props.unfollow,\n      follow: this.props.follow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching\n})(UsersContainer);","map":{"version":3,"sources":["e:/Social/socials/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","setUsers","unfollow","setCurrentPage","setTotalUsersCount","toggleIsFetching","axios","Users","Preloader","UsersContainer","Component","onPageChanged","pageNumber","props","get","pageSize","then","response","data","items","componentDidMount","currentPage","withCre","totalCount","render","isFetching","totalUsersCount","users","mapStateToProps","state","usersPage"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { follow, setUsers, unfollow, setCurrentPage, setTotalUsersCount, toggleIsFetching} from '../../redux/users-reducer';\r\nimport * as axios from 'axios';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/preloader';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`,\r\n        {withCre}\r\n        ).then(response => {\r\n            this.props.toggleIsFetching(false);\r\n            this.props.setUsers(response.data.items);\r\n            this.props.setTotalUsersCount(response.data.totalCount);\r\n        });\r\n    }\r\n\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.toggleIsFetching(true);\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.toggleIsFetching(false);\r\n            this.props.setUsers(response.data.items);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    unfollow={this.props.unfollow}\r\n                    follow={this.props.follow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setUsers,\r\n        setCurrentPage,\r\n        setTotalUsersCount,\r\n        toggleIsFetching,\r\n})(UsersContainer);\r\n"]},"metadata":{},"sourceType":"module"}