{"ast":null,"code":"import _defineProperty from\"e:\\\\msmgith\\\\mcm\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _slicedToArray from\"e:\\\\msmgith\\\\mcm\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import styles from'./Paginator.module.css';import cn from'classnames';var Paginator=function Paginator(_ref){var totalItemsCount=_ref.totalItemsCount,onPageChanged=_ref.onPageChanged,pageSize=_ref.pageSize,currentPage=_ref.currentPage,_ref$portionSize=_ref.portionSize,portionSize=_ref$portionSize===void 0?8:_ref$portionSize;var pagesCount=Math.ceil(totalItemsCount/pageSize);var pages=[];for(var i=1;i<=pagesCount;i++){pages.push(i);}var portionCount=Math.ceil(pagesCount/portionSize);var _useState=useState(1),_useState2=_slicedToArray(_useState,2),portionNumber=_useState2[0],setPortionNumber=_useState2[1];var leftPortionPageNumber=(portionNumber-1)*portionSize+1;var rightPortionPageNumber=portionNumber*portionSize;return React.createElement(\"div\",{className:cn(styles.paginator)},portionNumber>1&&React.createElement(\"button\",{onClick:function onClick(){setPortionNumber(portionNumber-1);}},\"Prev\"),pages.filter(function(p){return p>=leftPortionPageNumber&&p<=rightPortionPageNumber;}).map(function(p){return React.createElement(\"span\",{className:cn(_defineProperty({},styles.selectedPage,currentPage===p),styles.pageNumber),key:p,onClick:function onClick(e){onPageChanged(p);}},p);}),portionCount>portionNumber&&React.createElement(\"button\",{onClick:function onClick(){setPortionNumber(portionNumber+1);}},\"Next\"));};export default Paginator;","map":{"version":3,"sources":["e:/msmgith/mcm/src/components/common/Paginator/Paginator.jsx"],"names":["React","useState","styles","cn","Paginator","totalItemsCount","onPageChanged","pageSize","currentPage","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","map","selectedPage","pageNumber","e"],"mappings":"8MAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CAEA,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA8E,IAA5EC,CAAAA,eAA4E,MAA5EA,eAA4E,CAA5DC,aAA4D,MAA5DA,aAA4D,CAA7CC,QAA6C,MAA7CA,QAA6C,CAAnCC,WAAmC,MAAnCA,WAAmC,uBAArBC,WAAqB,CAArBA,WAAqB,2BAAP,CAAO,kBAC1F,GAAIC,CAAAA,UAAU,CAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,CAAGE,QAA5B,CAAjB,CAEA,GAAIM,CAAAA,KAAK,CAAG,EAAZ,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAIJ,UAArB,CAAiCI,CAAC,EAAlC,CAAsC,CAClCD,KAAK,CAACE,IAAN,CAAWD,CAAX,EACH,CAED,GAAIE,CAAAA,YAAY,CAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,CAAGD,WAAvB,CAAnB,CAR0F,cASlDR,QAAQ,CAAC,CAAD,CAT0C,wCASrFgB,aATqF,eAStEC,gBATsE,eAU1F,GAAIC,CAAAA,qBAAqB,CAAG,CAACF,aAAa,CAAG,CAAjB,EAAsBR,WAAtB,CAAoC,CAAhE,CACA,GAAIW,CAAAA,sBAAsB,CAAGH,aAAa,CAAGR,WAA7C,CAEA,MAAO,4BAAK,SAAS,CAAEN,EAAE,CAACD,MAAM,CAACmB,SAAR,CAAlB,EACFJ,aAAa,CAAG,CAAhB,EAAqB,8BAAQ,OAAO,CAAE,kBAAM,CAACC,gBAAgB,CAAED,aAAa,CAAE,CAAjB,CAAhB,CAAoC,CAA5D,SADnB,CAGFJ,KAAK,CACDS,MADJ,CACW,SAAAC,CAAC,QAAIA,CAAAA,CAAC,EAAIJ,qBAAL,EAA8BI,CAAC,EAAIH,sBAAvC,EADZ,EAEII,GAFJ,CAEQ,SAACD,CAAD,CAAO,CACR,MAAO,6BAAM,SAAS,CAAEpB,EAAE,oBAAGD,MAAM,CAACuB,YAAV,CAAyBjB,WAAW,GAAKe,CAAzC,EAA6CrB,MAAM,CAACwB,UAApD,CAAnB,CACP,GAAG,CAAEH,CADE,CAEP,OAAO,CAAE,iBAACI,CAAD,CAAO,CAAErB,aAAa,CAACiB,CAAD,CAAb,CACjB,CAHM,EAGHA,CAHG,CAAP,CAIH,CAPJ,CAHE,CAWEP,YAAY,CAAGC,aAAf,EAAgC,8BAAQ,OAAO,CAAE,kBAAM,CAAEC,gBAAgB,CAACD,aAAa,CAAG,CAAjB,CAAhB,CAAqC,CAA9D,SAXlC,CAAP,CAaH,CA1BD,CA4BA,cAAeb,CAAAA,SAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport cn from 'classnames';\r\n\r\nlet Paginator = ({totalItemsCount,onPageChanged, pageSize, currentPage,  portionSize = 8 }) =>{\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        {portionNumber > 1 && <button onClick={() => {setPortionNumber (portionNumber- 1)}}>Prev</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({[styles.selectedPage]: currentPage === p}, styles.pageNumber)}\r\n                key={p}\r\n                onClick={(e) => { onPageChanged(p); \r\n                }}>{p}</span>\r\n            })}\r\n            {portionCount > portionNumber && <button onClick={() => { setPortionNumber(portionNumber + 1) }}>Next</button>}\r\n    </div>\r\n}\r\n\r\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}