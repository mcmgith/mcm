{"ast":null,"code":"import _defineProperty from \"e:\\\\Social\\\\socials\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\nconst SEND_MESSAGE = 'SEND-MESSAGE';\nlet initialState = {\n  dialogs: [{\n    id: 1,\n    name: \"Sveta\"\n  }, {\n    id: 2,\n    name: \"Dasha\"\n  }],\n  messages: [{\n    id: 1,\n    message: \"Hi\"\n  }, {\n    id: 2,\n    message: \"What are you doing?\"\n  }],\n  newMessageBody: ''\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n  let stateCopy = _objectSpread({}, state, {\n    messages: [...state.messages]\n  });\n\n  switch (action.type) {\n    case UPDATE_NEW_MESSAGE_BODY:\n      {\n        s;\n        stateCopy.newMessageBody = action.body;\n        return stateCopy;\n      }\n\n    case SEND_MESSAGE:\n      {\n        let stateCopy = _objectSpread({}, state);\n\n        stateCopy.newMessageBody = [...state.newMessageBody];\n        let body = stateCopy.newMessageBody;\n        stateCopy.newMessageBody = '';\n        stateCopy.messages.push({\n          id: 51,\n          message: body\n        });\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const sendMessageCreator = () => {\n  return {\n    type: SEND_MESSAGE\n  };\n};\nexport const updateNewMessageBodyCreator = body => {\n  return {\n    type: UPDATE_NEW_MESSAGE_BODY,\n    body: body\n  };\n};\nexport default dialogsReducer;","map":{"version":3,"sources":["e:/Social/socials/src/redux/dialogs-reducer.js"],"names":["UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","newMessageBody","dialogsReducer","state","action","stateCopy","type","s","body","push","sendMessageCreator","updateNewMessageBodyCreator"],"mappings":";;;;;;AAAA,MAAMA,uBAAuB,GAAG,yBAAhC;AACA,MAAMC,YAAY,GAAG,cAArB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,OAAO,EAAG,CACE;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAOC,IAAAA,IAAI,EAAE;AAAb,GADF,EAEE;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAOC,IAAAA,IAAI,EAAE;AAAb,GAFF,CADK;AAKfC,EAAAA,QAAQ,EAAE,CACE;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAOG,IAAAA,OAAO,EAAE;AAAhB,GADF,EAEE;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAOG,IAAAA,OAAO,EAAE;AAAhB,GAFF,CALK;AASfC,EAAAA,cAAc,EAAE;AATD,CAAnB;;AAYA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAErD,MAAIC,SAAS,qBACNF,KADM;AAETJ,IAAAA,QAAQ,EAAC,CAAC,GAAGI,KAAK,CAACJ,QAAV;AAFA,IAAb;;AAMA,UAAOK,MAAM,CAACE,IAAd;AACI,SAAKb,uBAAL;AAA6B;AAGzBc,QAAAA,CAAC;AACDF,QAAAA,SAAS,CAACJ,cAAV,GAA2BG,MAAM,CAACI,IAAlC;AACA,eAAOH,SAAP;AACH;;AACD,SAAKX,YAAL;AAAmB;AACf,YAAIW,SAAS,qBAAOF,KAAP,CAAb;;AACAE,QAAAA,SAAS,CAACJ,cAAV,GAA2B,CAAC,GAAGE,KAAK,CAACF,cAAV,CAA3B;AAEA,YAAIO,IAAI,GAAGH,SAAS,CAACJ,cAArB;AACAI,QAAAA,SAAS,CAACJ,cAAV,GAA2B,EAA3B;AACAI,QAAAA,SAAS,CAACN,QAAV,CAAmBU,IAAnB,CAAwB;AAAEZ,UAAAA,EAAE,EAAE,EAAN;AAAUG,UAAAA,OAAO,EAAEQ;AAAnB,SAAxB;AACA,eAAOH,SAAP;AACH;;AACD;AACI,aAAOF,KAAP;AAlBR;AAoBH,CA5BD;;AA8BA,OAAO,MAAMO,kBAAkB,GAAG,MAAM;AACpC,SAAO;AACHJ,IAAAA,IAAI,EAAEZ;AADH,GAAP;AAGH,CAJM;AAKP,OAAO,MAAMiB,2BAA2B,GAAIH,IAAD,IAAU;AACjD,SAAO;AACHF,IAAAA,IAAI,EAAEb,uBADH;AAEHe,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;AAOP,eAAeN,cAAf","sourcesContent":["const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs:  [\r\n                {id: 1,name: \"Sveta\" }, \r\n                {id: 2,name: \"Dasha\"} \r\n              ],\r\n    messages: [ \r\n                {id: 1,message: \"Hi\"}, \r\n                {id: 2,message: \"What are you doing?\"} \r\n              ],\r\n    newMessageBody: ''\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    let stateCopy = {\r\n        ...state,\r\n        messages:[...state.messages] \r\n    };\r\n    \r\n\r\n    switch(action.type){\r\n        case UPDATE_NEW_MESSAGE_BODY:{\r\n            \r\n            \r\n            s\r\n            stateCopy.newMessageBody = action.body;\r\n            return stateCopy;\r\n        }\r\n        case SEND_MESSAGE: {\r\n            let stateCopy = {...state};\r\n            stateCopy.newMessageBody = [...state.newMessageBody];\r\n            \r\n            let body = stateCopy.newMessageBody;\r\n            stateCopy.newMessageBody = '';\r\n            stateCopy.messages.push({ id: 51, message: body});\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = () => {\r\n    return {\r\n        type: SEND_MESSAGE\r\n    }\r\n}\r\nexport const updateNewMessageBodyCreator = (body) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_BODY,\r\n        body: body\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}