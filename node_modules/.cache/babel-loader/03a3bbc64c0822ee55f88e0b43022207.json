{"ast":null,"code":"import _defineProperty from \"e:\\\\Social\\\\socials\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { authAPI } from '../Api/Api';\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return _objectSpread({}, state, {}, action.payload, {\n        isAuth: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (userId, email, login, is) => ({\n  type: SET_USER_DATA,\n  payload: {\n    userId,\n    email,\n    login\n  }\n});\nexport const getAuthUserData = () => dispatch => {\n  authAPI.me().then(response => {\n    if (response.data.resultCode === 0) {\n      let _response$data$data = response.data.data,\n          id = _response$data$data.id,\n          login = _response$data$data.login,\n          email = _response$data$data.email;\n      dispatch(setAuthUserData(id, email, login));\n    }\n  });\n};\nexport const Login = (email, password, rememberMe) => dispatch => {\n  authAPI.login(email, password, rememberMe).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(getAuthUserData());\n    }\n  });\n};\nexport const Logout = (email, password, rememberMe) => dispatch => {\n  authAPI.logout().then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(getAuthUserData());\n    }\n  });\n};\nexport default authReducer;","map":{"version":3,"sources":["e:/Social/socials/src/redux/auth-reducer.js"],"names":["authAPI","SET_USER_DATA","initialState","userId","email","login","isAuth","authReducer","state","action","type","payload","setAuthUserData","is","getAuthUserData","dispatch","me","then","response","data","resultCode","id","Login","password","rememberMe","Logout","logout"],"mappings":";;;;;;AAAA,SAAQA,OAAR,QAAsB,YAAtB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,IADO;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,aAAL;AACK,+BACOO,KADP,MAEOC,MAAM,CAACE,OAFd;AAGIL,QAAAA,MAAM,EAAE;AAHZ;;AAKT;AAAS,aAAOE,KAAP;AAPT;AASH,CAVD;;AAYA,OAAO,MAAMI,eAAe,GAAG,CAACT,MAAD,EAASC,KAAT,EAAgBC,KAAhB,EAAuBQ,EAAvB,MAA+B;AAACH,EAAAA,IAAI,EAAET,aAAP;AAAsBU,EAAAA,OAAO,EAAC;AAACR,IAAAA,MAAD;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB;AAA9B,CAA/B,CAAxB;AAEP,OAAO,MAAMS,eAAe,GAAG,MAAOC,QAAD,IAAc;AAC/Cf,EAAAA,OAAO,CAACgB,EAAR,GACCC,IADD,CACMC,QAAQ,IAAI;AACd,QAAGA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAhC,EAAkC;AAAA,gCACLF,QAAQ,CAACC,IAAT,CAAcA,IADT;AAAA,UACzBE,EADyB,uBACzBA,EADyB;AAAA,UACrBhB,KADqB,uBACrBA,KADqB;AAAA,UACdD,KADc,uBACdA,KADc;AAE9BW,MAAAA,QAAQ,CAACH,eAAe,CAACS,EAAD,EAAKjB,KAAL,EAAYC,KAAZ,CAAhB,CAAR;AACH;AACJ,GAND;AAOH,CARM;AAUP,OAAO,MAAMiB,KAAK,GAAG,CAAClB,KAAD,EAAQmB,QAAR,EAAkBC,UAAlB,KAAkCT,QAAD,IAAc;AAChEf,EAAAA,OAAO,CAACK,KAAR,CAAcD,KAAd,EAAqBmB,QAArB,EAA+BC,UAA/B,EACCP,IADD,CACMC,QAAQ,IAAI;AACd,QAAGA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAhC,EAAkC;AAC9BL,MAAAA,QAAQ,CAACD,eAAe,EAAhB,CAAR;AACH;AACJ,GALD;AAMH,CAPM;AASP,OAAO,MAAMW,MAAM,GAAG,CAACrB,KAAD,EAAQmB,QAAR,EAAkBC,UAAlB,KAAkCT,QAAD,IAAc;AACjEf,EAAAA,OAAO,CAAC0B,MAAR,GACCT,IADD,CACMC,QAAQ,IAAI;AACd,QAAGA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAhC,EAAkC;AAC9BL,MAAAA,QAAQ,CAACD,eAAe,EAAhB,CAAR;AACH;AACJ,GALD;AAMH,CAPM;AASP,eAAeP,WAAf","sourcesContent":["import {authAPI} from '../Api/Api'\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA:\r\n             return {\r\n                 ...state, \r\n                 ...action.payload,\r\n                 isAuth: true\r\n            }\r\n    default: return state;\r\n}\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, is) => ({type: SET_USER_DATA, payload:{userId, email, login}})\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    authAPI.me()\r\n    .then(response => {\r\n        if(response.data.resultCode === 0){\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login));\r\n        }\r\n    });\r\n}\r\n\r\nexport const Login = (email, password, rememberMe) => (dispatch) => {\r\n    authAPI.login(email, password, rememberMe)\r\n    .then(response => {\r\n        if(response.data.resultCode === 0){\r\n            dispatch(getAuthUserData())\r\n        }\r\n    });\r\n}\r\n\r\nexport const Logout = (email, password, rememberMe) => (dispatch) => {\r\n    authAPI.logout()\r\n    .then(response => {\r\n        if(response.data.resultCode === 0){\r\n            dispatch(getAuthUserData())\r\n        }\r\n    });\r\n}\r\n\r\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}