{"ast":null,"code":"import _defineProperty from \"e:\\\\Social\\\\socials\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 40,\n  setTotalUsersCount: 0,\n  setCurrentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return _objectSpread({}, state, {\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return _objectSpread({}, u, {\n              followed: true\n            });\n          }\n\n          return u;\n        })\n      });\n\n    case UNFOLLOW:\n      return _objectSpread({}, state, {\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return _objectSpread({}, u, {\n              followed: false\n            });\n          }\n\n          return u;\n        })\n      });\n\n    case SET_USERS:\n      {\n        return _objectSpread({}, state, {\n          users: action.users\n        });\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return _objectSpread({}, state, {\n          currentPage: action.currentPage\n        });\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return _objectSpread({}, state, {\n          totalUsersCount: action.count\n        });\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return _objectSpread({}, state, {\n          isFetching: action.isFetching\n        });\n      }\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      {\n        return _objectSpread({}, state, {\n          followingInProgress: [...state.followingInProgress.filter(id)]\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const follow = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollow = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: totalUsersCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = isFetching => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching\n});\nexport default usersReducer;","map":{"version":3,"sources":["e:/Social/socials/src/redux/users-reducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","setTotalUsersCount","setCurrentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","u","id","userId","followed","currentPage","totalUsersCount","count","filter","follow","unfollow","setUsers","toggleIsFetching","toggleFollowingProgress"],"mappings":"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","sourcesContent":["const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 40,\r\n    setTotalUsersCount: 0,\r\n    setCurrentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n             return {\r\n                 ...state, \r\n                users: state.users.map( u => {\r\n                    if(u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return{...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return{...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return{...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING:{\r\n            return{...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:{\r\n            return{...state, \r\n                  followingInProgress: [...state.followingInProgress.filter(id )]\r\n                  }\r\n        }\r\n    default: return state;\r\n}\r\n}\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type:SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type:SET_TOTAL_USERS_COUNT, count:totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type:TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching})\r\n\r\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}