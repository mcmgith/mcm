{"version":3,"sources":["components/common/FormControls/FormsControls.module.css","components/common/FormControls/FormsControls.js","Utilits/Validators/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","input","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","DialogItem","path","id","s","dialog","active","to","Message","message","maxLength50","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/6.599d4e07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2wnPw\",\"error\":\"FormsControls_error__2yR5m\",\"formSummaryError\":\"FormsControls_formSummaryError__GNmT5\"};","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\nimport {Field} from 'redux-form';\r\n\r\nconst FormControl = ({meta:{touched,error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder,name,validators,component,props={},text='') => (\r\n   <div> \r\n         <Field placeholder={placeholder} \r\n                name={name} \r\n                validate={validators}\r\n                component={component}\r\n                {...props} \r\n                /> {text}\r\n    </div> \r\n)","import React from 'react';\r\n\r\n\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return  `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Zv7Os\",\"dialogsItems\":\"Dialogs_dialogsItems__3fC2j\",\"dialog\":\"Dialogs_dialog__N9wzd\",\"active\":\"Dialogs_active__1VPAH\",\"messages\":\"Dialogs_messages__1Kk2P\",\"message\":\"Dialogs_message__2mlov\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = /dialogs/ + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../../Utilits/Validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                    validate={[required, maxLength50 ]} \r\n                    name='newMessageBody' placeholder='Enter your message' />\r\n            </div>\r\n            <div>\r\n                <button> Send </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form:'dialog-add-message-form'})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport {Redirect} from 'react-router-dom';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map (d=> <DialogItem name={d.name} key={d.id} id={d.id} /> );\r\n    let messagesElements = state.messages.map (m=> <Message message={m.message} key={m.id}/>);\r\n    \r\n    \r\n    let addNewMessage = (values) =>{\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>           \r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n               <div> { messagesElements } </div>\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    });\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport Dialogs from './Dialogs';\r\nimport { sendMessageCreator} from '../../redux/dialogs-reducer';\r\nimport {connect} from 'react-redux';\r\nimport { withAuthRedirect } from './../Hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}