{"version":3,"sources":["components/common/FormControls/FormsControls.module.css","components/common/FormControls/FormsControls.js","Utilits/Validators/validators.js","components/Login/Login.jsx"],"names":["module","exports","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","input","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","type","style","formSummaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,+LCGrHC,EAAc,SAAC,GAAsC,IAAD,IAApCC,KAAMC,EAA8B,EAA9BA,QAAQC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SAClCC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,KAClE,6BACKC,GAEHC,GAAY,8BAAOF,KAKpBM,EAAW,SAACC,GAAW,IACzBC,EAAoCD,EAApCC,MAAuBC,GAAaF,EAA7BT,KAA6BS,EAAvBG,MADW,YACYH,EADZ,2BAE/B,OAAO,kBAACV,EAAgBU,EAAO,8CAAcC,EAAWC,MAE/CE,EAAQ,SAACJ,GAAW,IACtBC,EAAoCD,EAApCC,MAAuBC,GAAaF,EAA7BT,KAA6BS,EAAvBG,MADQ,YACeH,EADf,2BAE5B,OAAO,kBAACV,EAAgBU,EAAO,2CAAWC,EAAWC,MAG5CG,EAAc,SAACC,EAAYC,EAAKC,EAAWC,GAA7B,IAAuCT,EAAvC,uDAA6C,GAAGU,EAAhD,uDAAqD,GAArD,OACxB,6BACM,kBAAC,IAAD,eAAOJ,YAAaA,EACbC,KAAMA,EACNI,SAAUH,EACVC,UAAWA,GACPT,IALjB,IAMiBU,K,iCChCpB,6EAGaE,EAAW,SAAAC,GACpB,IAAIA,EAEJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAyBA,EAAzB,e,iCCVlC,gGAyBME,EAAiBC,YAAU,CAACC,KAAK,SAAhBD,EAhBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAc3B,EAAW,EAAXA,MAC9B,OACQ,0BAAM4B,SAAYD,GACTf,YAAY,QAAQ,QAAQ,CAACO,KAAWR,KACxCC,YAAY,WAAY,WAAY,CAACO,KAAWR,IAAO,CAACkB,KAAK,aAC7DjB,YAAY,KAAK,aAAa,GAAID,IAAO,CAACkB,KAAK,YAAa,eAC5D7B,GAAS,yBAAKG,UAAW2B,IAAMC,kBAC/B/B,GAEL,6BACI,8CA2BLgC,uBAJS,SAACC,GAAD,MAAY,CAChCC,OAAOD,EAAME,KAAKD,UAGkB,CAACE,WAA1BJ,EAnBD,SAACzB,GAKX,OAAGA,EAAM2B,OACE,kBAAC,IAAD,CAAUG,GAAI,aAGlB,6BACH,qCACA,kBAACb,EAAD,CAAgBI,SAVH,SAACU,GACd/B,EAAM6B,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.14c3227d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2wnPw\",\"error\":\"FormsControls_error__2yR5m\",\"formSummaryError\":\"FormsControls_formSummaryError__GNmT5\"};","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\nimport {Field} from 'redux-form';\r\n\r\nconst FormControl = ({meta:{touched,error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder,name,validators,component,props={},text='') => (\r\n   <div> \r\n         <Field placeholder={placeholder} \r\n                name={name} \r\n                validate={validators}\r\n                component={component}\r\n                {...props} \r\n                /> {text}\r\n    </div> \r\n)","import React from 'react';\r\n\r\n\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return  `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n","import React from 'react';\r\nimport {reduxForm} from 'redux-form';\r\nimport { Input, createField} from '../common/FormControls/FormsControls';\r\nimport {required} from '../../Utilits/Validators/validators';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport style from './../common/FormControls/FormsControls.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return  (\r\n            <form onSubmit = {handleSubmit}>\r\n                    {createField('Email','email',[required], Input)}\r\n                    {createField('Password', 'password', [required], Input, {type:'password'})}\r\n                    {createField(null,'rememberMe',[], Input, {type:\"checkbox\"}, 'remember me')}\r\n                    {error && <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n                <div>\r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n           )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form:'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if(props.isAuth){\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}